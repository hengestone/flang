//assumes little endian
fn to_bin (i32 size, ptr(void) p) : i32 {
  var ptr(u8) b = cast(ptr(u8)) p;
  var u8 byte;
  var i32 i;
  var i32 j;

  for i = size - 1; i >= 0; i = i - 1 {
    //printf("byte = %c\n", b[i]);
    for j = 7; j >= 0; j-- {
      byte = b[i] & (1<<j);
      byte = byte >> j;
      //printf("%d - %u\n", i + j, byte);
      printf("%u", byte);
    }
  }
  printf("\n");
  return 0;
}

var u8 _u8 = 8;
var u16 _u16 = 16;
var u32 _u32 = 32;
var u64 _u64 = 64;

_u16 = _u8; // zext i8 %2 to i32
_u32 = _u16;
_u64 = _u32;

printf("u8 = 8 @ binary = ");
to_bin(1, &_u8);
printf("u16 = (u8)-8 @ binary = ");
to_bin(2, &_u16);
printf("_u32 = (u16)(u8)-8 @ binary = ");
to_bin(4, &_u32);
printf("_u64 = (u32)(u16)(u8)-8 @ binary = ");
to_bin(8, &_u64);
