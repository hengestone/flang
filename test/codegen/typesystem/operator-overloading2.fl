ffi fn printf(ptr(i8) format, ...) : i32;

struct vec2 {
  f32 x,
  f32 y,
};

struct rect {
  vec2 top_left,
  vec2 bottom_right,
};


function operator [](vec2* a, u64 index) : f32 {
  var ptr(f32) x = unsafe_cast(ptr(f32)) a;

  return x[index];
}

function operator []=(vec2* a, u64 index) : f32* {
  var ptr(f32) x = unsafe_cast(ptr(f32)) a;

  return &x[index];
}


var vec2 t;
var vec2 b;
t.x = 1; t.y = 2;
b.x = 3; b.y = 4;

printf("vec2 t(%f , %f) b(%f , %f)\n", t.x, t.y, b.x, b.y);
printf("vec2 t(%f , %f) b(%f , %f)\n", t[0], t[1], b[0], b[1]);

t[0] = 101; t[1] = 102;
b[0] = 103; b[1] = 104;

printf("vec2 t(%f , %f) b(%f , %f)\n", t.x, t.y, b.x, b.y);
printf("vec2 t(%f , %f) b(%f , %f)\n", t[0], t[1], b[0], b[1]);
